package com.taotao.portal.service.Impl;


import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;

import com.taotao.common.pojo.TaotaoResult;
import com.taotao.common.utils.CookieUtils;
import com.taotao.common.utils.HttpClientUtil;
import com.taotao.common.utils.JsonUtils;
import com.taotao.common.utils.ListUtils;
import com.taotao.pojo.TbItem;
import com.taotao.portal.pojo.CartItem;
import com.taotao.portal.service.CartService;
@Service
public class CartServiceImpl implements CartService {

	@Value("${ITEM-BASE-IP}")
	private String RedisUrl;
	@Value("${TT_CART}")
	private String TT_CART;
	public TaotaoResult addCartItem(Long id, Long num,HttpServletRequest request,HttpServletResponse response) {
		
		
		boolean flag=false;//判断cookie中有没有存在当前要存入数据的标志 ，false 无 true 有
		//取购物车中的商品列表
		List<CartItem> list=getCartItemList(request);

		if(!ListUtils.isEmptyList(list)){
		for(CartItem cartData:list){
			if(id==cartData.getId()){
				flag=true;
				//如果在购物车中已经存在该商品的信息
				num=num+cartData.getNum();
				//增加商品的数量，其余数据不变
				cartData.setNum(num);
				break;
			}
		}
		}
		if(flag==false){
		String json=HttpClientUtil.doGet(RedisUrl+id);

		TaotaoResult result=TaotaoResult.formatToPojo(json, TbItem.class);
		if(result.getStatus()==200){
			//通过id获取商品信息
			TbItem tbItem=(TbItem) result.getData();
			CartItem cartItem=new CartItem();
			cartItem.setId(tbItem.getId());
			cartItem.setImage(ListUtils.toSoloString(tbItem.getImage()));
			cartItem.setNum(num);
			cartItem.setPrice(tbItem.getPrice());
			cartItem.setTitle(tbItem.getTitle());
			list.add(cartItem);
			//将新的商品信息保存到list中
		}
		}
		String json=JsonUtils.objectToJson(list);
		CookieUtils.setCookie(request, response, TT_CART, json, true);
		//向cookie中写入更新后的购物车数据
		return TaotaoResult.ok();
	}
	public List<CartItem> getCartItemList(HttpServletRequest request){
		//从cookie中取出购物车的商品信息
		String cartJson=CookieUtils.getCookieValue(request, TT_CART, true);
		if(cartJson==null){
			return new ArrayList<>();
			
		}
		List<CartItem> list=JsonUtils.jsonToList(cartJson, CartItem.class);
		return list;
		
	}
 
}
